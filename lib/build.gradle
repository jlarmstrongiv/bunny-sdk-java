/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser' version '1.12.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
    api 'com.microsoft.kiota:microsoft-kiota-abstractions:1.2.0'
    api 'com.microsoft.kiota:microsoft-kiota-http-okHttp:1.2.0'
    api 'com.microsoft.kiota:microsoft-kiota-serialization-json:1.2.0'
    api 'com.microsoft.kiota:microsoft-kiota-serialization-text:1.2.0'
    api 'com.microsoft.kiota:microsoft-kiota-serialization-form:1.2.0'
    api 'com.microsoft.kiota:microsoft-kiota-serialization-multipart:1.2.0'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.bunny-launcher'
            artifactId = 'bunny-sdk'
            // version is defined in the root gradle.properties file

            from components.java

            pom {
                name = "bunny-sdk"
                description = "Java SDK for bunny.net üê∞"
                url = "https://bunny-launcher.net/bunny-sdk/languages/java/"
                packaging = "jar"
                properties = [:]
                licenses {
                    license {
                        name = "AGPL-3.0-only"
                        url = "https://spdx.org/licenses/AGPL-3.0-only.html"
                    }
                }
                developers {
                    developer {
                        id = "jlarmstrongiv"
                        name = "John L. Armstrong IV"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/jlarmstrongiv/bunny-sdk-java.git"
                    developerConnection = "scm:git:git://github.com/jlarmstrongiv/bunny-sdk-java.git"
                    url = "https://github.com/jlarmstrongiv/bunny-sdk-java"
                }
            }
        }
    }
    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

javadoc {
    options.addBooleanOption('Xdoclint:none', true)
}

compileJava {
    options.compilerArgs += [
        '-Xlint:all'
    ]
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    withSourcesJar()
    withJavadocJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

jreleaser {
    gitRootSearch = true
    files {
        active = 'ALWAYS'
        glob {
            pattern = 'build/staging-deploy/**/*.jar'
        }
    }
    signing {
        active = 'ALWAYS'
        armored = true
        mode = 'FILE'
        publicKey = System.properties['user.home'] + '/.gnupg/public.pgp'
        secretKey = System.properties['user.home'] + '/.gnupg/private.pgp'
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    sign = true
                    checksums = true
                    sourceJar = true
                    javadocJar = true
                    verifyPom = true
                    applyMavenCentralRules = true
                    stagingRepository('build/staging-deploy')
                    namespace = 'com.bunny-launcher'
                    retryDelay = 10
                    maxRetries = 120
                }
            }
        }
    }
    release {
        github {
            repoOwner = 'jlarmstrongiv'
            name = 'bunny-sdk-java'
        }
    }
}
